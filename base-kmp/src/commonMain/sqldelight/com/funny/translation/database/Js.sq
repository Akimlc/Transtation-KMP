import com.funny.translation.translate.Language;
import kotlin.Boolean;
import kotlin.Int;
import kotlin.collections.List;

CREATE TABLE IF NOT EXISTS plugin (
    id INTEGER AS Int PRIMARY KEY AUTOINCREMENT NOT NULL,
    fileName TEXT NOT NULL,
    code TEXT NOT NULL,
    author TEXT NOT NULL,
    version INTEGER AS Int NOT NULL,
    description TEXT NOT NULL,
    enabled INTEGER AS Int NOT NULL,
    minSupportVersion INTEGER AS Int NOT NULL DEFAULT 2,
    maxSupportVersion INTEGER AS Int NOT NULL DEFAULT 999,
    targetSupportVersion INTEGER AS Int NOT NULL,
    isOffline INTEGER AS Boolean NOT NULL,
    debugMode INTEGER AS Boolean NOT NULL,
    supportLanguages TEXT AS List<Language> NOT NULL
);

-- Queries for JsDao

-- Query to select all JsBeans
getAllJs:
SELECT * FROM plugin;

-- Query to select all JsBeans as Flow
getAllJsFlow:
SELECT * FROM plugin;

-- Query to select all enabled JsBeans as Flow
getEnabledJs:
SELECT * FROM plugin WHERE enabled > 0;

-- Query to get the count of JsBeans
getJsCount:
SELECT COUNT(*) FROM plugin;

-- Query to select a JsBean by name
queryJsByName:
SELECT * FROM plugin WHERE fileName = ?;

-- Insert a JsBean
insertJs:
INSERT INTO plugin (fileName, code, author, version, description, enabled, minSupportVersion, maxSupportVersion, targetSupportVersion, isOffline, debugMode, supportLanguages)
VALUES ?;

-- Insert a list of JsBeans
insertJsList:
INSERT INTO plugin (fileName, code, author, version, description, enabled, minSupportVersion, maxSupportVersion, targetSupportVersion, isOffline, debugMode, supportLanguages)
VALUES ?;

-- Delete a JsBean by name
deleteJsByName:
DELETE FROM plugin WHERE fileName = ?;

-- Update a JsBean
updateJs:
INSERT OR REPLACE INTO plugin (fileName, code, author, version, description, enabled, minSupportVersion, maxSupportVersion, targetSupportVersion, isOffline, debugMode, supportLanguages)
VALUES ?;
